<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.4</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.roommate.matching</groupId>
	<artifactId>roommate-matching</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Roommate-Matching</name>
	<description>Roommate Matching Service</description>
	<properties>
		<container.image.binary>roommate-matching-${project.version}.jar</container.image.binary>
		<!--
		<container.image.healthcheck.url>http://localhost:${container.image.port}${healthcheck.uri}</container.image.healthcheck.url>-->
		<container.image.dir>/app</container.image.dir>
		<healthcheck.uri>/</healthcheck.uri>
		<!--		<container.image.port>${roommate.matching.server.http.port}</container.image.port>-->

		<!-- TODO: need to define these, reference parent pom -->
		<!--		<container.image.java.args>${java.heap.args}
		${java.gc.args}</container.image.java.args>-->
		<!--		<container.image.to></container.image.to>-->
		<!--		<container.image.from></container.image.from>-->

		<java.version>8</java.version>

		<version.docker-maven-plugin>0.40.3</version.docker-maven-plugin>
		<version.properties-maven-plugin>1.0.0</version.properties-maven-plugin>
	</properties>
	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>6.0.3</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
			<version>3.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>3.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
			<version>3.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<version>3.0.0</version>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>3.0.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>8.0.0.Final</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>31.1-jre</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>5.3.23</version>
		</dependency>

		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>1.6.2</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
			<version>3.0.0</version>
		</dependency>

		<!-- GOOGLE API -->
		<dependency>
			<groupId>com.google.api-client</groupId>
			<artifactId>google-api-client</artifactId>
			<version>2.1.1</version>
		</dependency>

		<dependency>
			<groupId>com.google.oauth-client</groupId>
			<artifactId>google-oauth-client</artifactId>
			<version>1.34.1</version>
		</dependency>

		<dependency>
			<groupId>com.google.http-client</groupId>
			<artifactId>google-http-client</artifactId>
			<version>1.42.3</version>
		</dependency>

		<dependency>
			<groupId>com.google.http-client</groupId>
			<artifactId>google-http-client-jackson2</artifactId>
			<version>1.42.3</version>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.10</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.14</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>4.4.16</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.14.1</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>3.0.2</version>
		</dependency>

		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>3.21.12</version>
		</dependency>

		<dependency>
			<groupId>xpp3</groupId>
			<artifactId>xpp3</artifactId>
			<version>1.1.4c</version>
		</dependency>

		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson-spring-boot-starter</artifactId>
			<version>3.19.1</version>
		</dependency>

		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson</artifactId>
			<version>3.19.1</version>
			<!--			<exclusions>-->
			<!--				<exclusion>-->
			<!--					&lt;!&ndash; TODO: FIGURE OUT -->
			<!--					HOW TO RESOLVE ISSUES WITH KRYO-->
			<!--					METHODS-->
			<!--					1. EXCLUDE KRYO-->
			<!--					2. DOWNGRADE TO PREVIOUS VERSION OF KRYO-->
			<!--					3. INCLUDE KRYO; FIX CIRCULAR DEPENDENCY &ndash;&gt;-->
			<!--					<groupId>com.esotericsoftware</groupId>-->
			<!--					<artifactId>kryo</artifactId>-->
			<!--				</exclusion>-->
			<!--			</exclusions>-->
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.esotericsoftware/kryo -->
		<!--		<dependency>-->
		<!--			<groupId>com.esotericsoftware</groupId>-->
		<!--			<artifactId>kryo</artifactId>-->
		<!--			<version>4.0.0</version>-->
		<!--		</dependency>-->


		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>5.1.0</version>
		</dependency>

		<!-- JAVAX API -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>${container.image.binary}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!--			<plugin>-->
			<!--				<groupId>io.fabric8</groupId>-->
			<!--				<artifactId>docker-maven-plugin</artifactId>-->
			<!--				<version>${version.docker-maven-plugin}</version>-->
			<!--				<configuration>-->
			<!--					<showLogs>true</showLogs>-->
			<!--					<images>-->
			<!--						<image>-->
			<!--							<alias>service</alias>-->
			<!--							<name></name>-->
			<!--							<build>-->
			<!--								<from></from>-->
			<!--								<healthCheck>-->
			<!--									<interval>1s</interval>-->
			<!--									<timeout>3s</timeout>-->
			<!--									<startPeriod>1m</startPeriod>-->
			<!--									<retries>3</retries>-->
			<!--									&lt;!&ndash; TODO: Address the redirect and replace with grep 200 &ndash;&gt;-->
			<!--									<cmd>curl -w '%{http_code}' ${container.image.healthcheck.url} | grep 302 || exit
			1</cmd>-->
			<!--								</healthCheck>-->
			<!--								<cmd>-->
			<!--									<shell>java ${JAVA_PROXY_ARGS} -jar ${container.image.java.args}
			${container.image.dir}/${container.image.binary}</shell>-->
			<!--								</cmd>-->
			<!--								<tags>-->
			<!--									<tag>latest</tag>-->
			<!--									<tag>${project.version}</tag>-->
			<!--								</tags>-->
			<!--								<labels>-->
			<!--
			<org.opencontainers.image.created>${maven.build.timestamp}</org.opencontainers.image.created>-->
			<!--                                    <org.opencontainers.image.url>${scm.url.http}</org.opencontainers.image.url>-->
			<!--
			<org.opencontainers.image.source>${scm.url.connection}</org.opencontainers.image.source>-->
			<!--
			<org.opencontainers.image.version>${project.version}</org.opencontainers.image.version>-->
			<!--                                    <org.opencontainers.image.title>${project.name}</org.opencontainers.image.title>-->
			<!--
			<org.opencontainers.image.description>${project.description}</org.opencontainers.image.description>-->
			<!--
			<org.opencontainers.image.licenses>${parameter.license}</org.opencontainers.image.licenses>-->
			<!--								</labels>-->
			<!--								<env>-->
			<!--									<JAVA_PROXY_ARGS>-Dhttp.nonProxyHosts=''</JAVA_PROXY_ARGS>-->
			<!--								</env>-->
			<!--								<ports>-->
			<!--									<port>${container.image.port}/tcp</port>-->
			<!--								</ports>-->
			<!--								<workdir>${container.image.dir}</workdir>-->
			<!--								<assembly>-->
			<!--									<name>app</name>-->
			<!--									<descriptorRef>artifact-with-dependencies</descriptorRef>-->
			<!--								</assembly>-->
			<!--							</build>-->
			<!--						</image>-->
			<!--					</images>-->
			<!--				</configuration>-->
			<!--				<executions>-->
			<!--					<execution>-->
			<!--						<id>build</id>-->
			<!--						<goals>-->
			<!--							<goal>build</goal>-->
			<!--						</goals>-->
			<!--						<phase>compile</phase>-->
			<!--					</execution>-->
			<!--					<execution>-->
			<!--						<id>push</id>-->
			<!--						<goals>-->
			<!--							<goal>push</goal>-->
			<!--						</goals>-->
			<!--						<phase>deploy</phase>-->
			<!--					</execution>-->
			<!--					<execution>-->
			<!--						<id>start</id>-->
			<!--						<goals>-->
			<!--							<goal>start</goal>-->
			<!--						</goals>-->
			<!--						<phase>pre-integration-test</phase>-->
			<!--					</execution>-->
			<!--					<execution>-->
			<!--						<id>stop</id>-->
			<!--						<goals>-->
			<!--							<goal>stop</goal>-->
			<!--						</goals>-->
			<!--						<phase>post-integration-test</phase>-->
			<!--					</execution>-->
			<!--				</executions>-->
			<!--			</plugin>-->
			<!--			<plugin>-->
			<!--				<groupId>org.apache.maven.plugins</groupId>-->
			<!--                <artifactId>maven-remote-resources-plugin</artifactId>-->
			<!--                <version>1.7.0</version>-->
			<!--				<configuration>-->
			<!--					<resourceBundles>-->
			<!--
			<resourceBundle>com.roommate.matching:${project.artifactId}:${project.version}</resourceBundle>-->
			<!--					</resourceBundles>-->
			<!--				</configuration>-->
			<!--				<executions>-->
			<!--					<execution>-->
			<!--						<goals>-->
			<!--							<goal>process</goal>-->
			<!--						</goals>-->
			<!--					</execution>-->
			<!--				</executions>-->
			<!--			</plugin>-->
			<!--			<plugin>-->
			<!--				<groupId>org.codehaus.mojo</groupId>-->
			<!--                <artifactId>properties-maven-plugin</artifactId>-->
			<!--                <version>${version.properties-maven-plugin}</version>-->
			<!--				<executions>-->
			<!--					<execution>-->
			<!--						<goals>-->
			<!--							<goal>read-project-properties</goal>-->
			<!--						</goals>-->
			<!--						<phase>process-resources</phase>-->
			<!--						<configuration>-->
			<!--							<files>-->
			<!--								&lt;!&ndash; TODO: this might not work &ndash;&gt;-->
			<!--								&lt;!&ndash;
			<file>${project.build.directory}/project.build.directory/application.properties</file>
			&ndash;&gt;-->
			<!--							</files>-->
			<!--						</configuration>-->
			<!--					</execution>-->
			<!--				</executions>-->
			<!--			</plugin>-->
		</plugins>
	</build>

	<developers>
		<developer>
			<name>Alex Cubbage</name>
			<email>abc224@lehigh.edu</email>
			<roles>
				<role>Product Owner</role>
			</roles>
		</developer>
		<developer>
			<name>Alan Wang</name>
			<email>alanwang53@gmail.com</email>
			<roles>
				<role>Architect</role>
				<role>Maintainer</role>
			</roles>
		</developer>
	</developers>

</project>